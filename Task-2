import java.util.*;

class User {
    private String username;
    private String password;
    private String fullName;

    public User(String username, String password, String fullName) {
        this.username = username;
        this.password = password;
        this.fullName = fullName;
    }

    public String getUsername() { return username; }
    public String getPassword() { return password; }
    public String getFullName() { return fullName; }

    public void setPassword(String newPassword) { this.password = newPassword; }
    public void setFullName(String newFullName) { this.fullName = newFullName; }
}

class AuthService {
    private User currentUser;
    private Map<String, User> users = new HashMap<>();

    public void register(String username, String password, String fullName) {
        users.put(username, new User(username, password, fullName));
    }

    public boolean login(String username, String password) {
        User user = users.get(username);
        if (user != null && user.getPassword().equals(password)) {
            currentUser = user;
            System.out.println(" Login successful. Welcome " + user.getFullName() + "!");
            return true;
        }
        System.out.println(" Invalid username or password.");
        return false;
    }

    public void logout() {
        if (currentUser != null) {
            System.out.println( currentUser.getFullName() + " has logged out.");
            currentUser = null;
        }
    }

    public void updateProfile(String newFullName) {
        if (currentUser != null) {
            currentUser.setFullName(newFullName);
            System.out.println(" Profile updated successfully.");
        }
    }

    public void updatePassword(String newPassword) {
        if (currentUser != null) {
            currentUser.setPassword(newPassword);
            System.out.println(" Password updated successfully.");
        }
    }

    public User getCurrentUser() {
        return currentUser;
    }
}

class Quiz {
    private String[] questions = {
        "Q1. Which language is used for Android development?\n1. Java\n2. Python\n3. C++\n4. Ruby",
        "Q2. What does JVM stand for?\n1. Java Virtual Machine\n2. Java Verified Method\n3. Java Visual Model\n4. None",
        "Q3. Which keyword is used to inherit a class in Java?\n1. super\n2. this\n3. extends\n4. implements"
    };

    private int[] answers = {1, 1, 3}; // correct answers
    private int score = 0;

    public void startQuiz(int timeLimitSeconds) {
        Scanner sc = new Scanner(System.in);
        score = 0;

        long startTime = System.currentTimeMillis();
        long endTime = startTime + timeLimitSeconds * 1000L;

        for (int i = 0; i < questions.length; i++) {
            if (System.currentTimeMillis() >= endTime) {
                System.out.println("\nTime is up! Auto-submitting your quiz...");
                break;
            }

            System.out.println("\n" + questions[i]);
            System.out.print("Enter your answer (1-4): ");

            int ans = -1;
            if (sc.hasNextInt()) ans = sc.nextInt();

            if (ans == answers[i]) {
                score++;
            }

            if (System.currentTimeMillis() >= endTime) {
                System.out.println("\n Time is up! Auto-submitting your quiz...");
                break;
            }
        }

        System.out.println("\n Quiz Completed. Your Score: " + score + "/" + questions.length);
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        AuthService auth = new AuthService();
        Quiz quiz = new Quiz();

        // Pre-register some users
        auth.register("aditi", "1234", "Aditi Patel");
        auth.register("john", "abcd", "John Doe");

        boolean running = true;

        while (running) {
            System.out.println("\n===== MENU =====");
            System.out.println("1. Login");
            System.out.println("2. Update Profile");
            System.out.println("3. Update Password");
            System.out.println("4. Start Quiz");
            System.out.println("5. Logout");
            System.out.println("6. Exit");
            System.out.print("Choose option: ");
            int choice = sc.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Username: ");
                    String u = sc.next();
                    System.out.print("Password: ");
                    String p = sc.next();
                    auth.login(u, p);
                    break;

                case 2:
                    if (auth.getCurrentUser() != null) {
                        System.out.print("Enter new full name: ");
                        sc.nextLine(); 
                        String newName = sc.nextLine();
                        auth.updateProfile(newName);
                    } else {
                        System.out.println("Please login first.");
                    }
                    break;

                case 3:
                    if (auth.getCurrentUser() != null) {
                        System.out.print("Enter new password: ");
                        String newPass = sc.next();
                        auth.updatePassword(newPass);
                    } else {
                        System.out.println(" Please login first.");
                    }
                    break;

                case 4:
                    if (auth.getCurrentUser() != null) {
                        System.out.println(" Starting Quiz... You have 60 seconds.");
                        quiz.startQuiz(60);
                    } else {
                        System.out.println(" Please login first.");
                    }
                    break;

                case 5:
                    auth.logout();
                    break;

                case 6:
                    running = false;
                    System.out.println("Exiting system. Goodbye!");
                    break;

                default:
                    System.out.println("Invalid choice.");
            }
        }

        sc.close();
    }
}
